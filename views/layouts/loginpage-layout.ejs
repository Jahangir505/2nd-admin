<!DOCTYPE html>
<html lang="en", ng-app="admin-app">
<head>
  <meta charset="utf-8">
  <title><%=typeof title == 'undefined' ? 'Login | 2ndA Friendly' : title%></title>


  <!--    <meta http-equiv="X-UA-Compatible" content="IE=edge">-->
  <!-- Viewport mobile tag for sensible mobile support -->
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" />
  <meta content="" name="description" />
  <meta content="" name="author" />

  <!-- ================== BEGIN core-css ================== -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
    <link href="/admin-container/coloradmin/css/vendor.min.css" rel="stylesheet" />
    <link href="/admin-container/coloradmin/css/app.min.css" rel="stylesheet" />
  <!-- ================== END core-css ================== -->

</head>

<body class="pace-top">
  <!-- BEGIN #loader -->
<div id="loader" class="app-loader"> <span class="spinner"></span> </div>
<!-- END #loader -->
<!-- BEGIN #app -->
<div id="app" class="app">
  <div class="login login-v2 fw-bold">
    <!-- BEGIN login-cover -->
    <div class="login-cover">
      <!-- <div class="login-cover-img" style="background-image: url(/admin-container/coloradmin/img/login-bg/login-bg-17.jpg)" data-id="login-cover-image"></div> -->
      <div class="login-cover-img" style="background-image: url(/admin-container/coloradmin/img/bg-login.png)" data-id="login-cover-image"></div>
      <div class="login-cover-bg"></div>
    </div>
    <!-- END login-cover -->
    <div class="login-container">
      <!-- BEGIN login-header -->
      <div class="login-header">
        <div class="brand">
          <div class="d-flex align-items-center">
              <strong>2ndA Friendly Admin</strong>
          </div>
          <small>Lorem Ipsum is simply dummy text of the</small>
      </div>
        <div class="icon"> <i class="fa fa-lock"></i> </div>
      </div>
      <!-- END login-header -->
      <!-- BEGIN login-content -->
      <div class="login-content"></div>
          <%- body %>
      </div>
       <!-- END login-content -->
</div>
</div>
<!-- BEGIN scroll-top-btn -->
<a href="javascript:;" class="btn btn-icon btn-circle btn-success btn-scroll-to-top" data-toggle="scroll-to-top"><i class="fa fa-angle-up"></i></a>
<!-- END scroll-top-btn -->
</div>
<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
-->

<!--TEMPLATES1-->
<!--<script type="text/javascript" src="/templates.js"></script>-->
<!--TEMPLATES1 END-->


<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, files in your `assets/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

-->




<!-- ================== BEGIN core-js ================== -->
<script src="/admin-container/coloradmin/js/vendor.min.js"></script>
<script src="/admin-container/coloradmin/js/app.min.js"></script>
<!-- ================== END core-js ================== -->
<!-- ================== BEGIN page-js ================== -->
<script src="/admin-container/coloradmin/js/demo/login-v2.demo.js"></script>
<!-- ================== END page-js ================== -->


<!--Bower Component JS Add Start-->
<!--Bower Component JS Add End-->

<!--SCRIPT11S-->

<!--SCRIPTS EN11D-->
</body>
</html>
